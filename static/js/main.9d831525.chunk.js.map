{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","paginationRange","Math","ceil","pages","prevDisabled","nextDisabled","className","cn","disabled","href","onClick","map","page","active","PER_PAGE_OPTIONS","items","App","useState","setPerPage","setCurrentPage","firstPageIndex","lastPageIndex","min","currentItems","useMemo","slice","id","value","onChange","e","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAkBC,KAAKC,KAAKN,EAAQC,GACpCM,EAAQd,EAAW,EAAGW,GAEtBI,EAA+B,IAAhBN,EACfO,EAAeP,IAAgBE,EAcrC,OACE,mCACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAfS,WACbZ,EAAc,GAChBC,EAAaD,EAAc,IAQvB,oBAWDK,EAAMQ,KAAI,SAACC,GAAD,OACT,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASd,IADhD,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACHE,IAASd,GACXC,EAAaa,IANnB,SAUGA,KAZEA,MAiBT,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAzDK,WACTZ,EAAcE,GAChBD,EAAaD,EAAc,IAkDvB,0BCrEJgB,EAAmB,CAAC,EAAG,EAAG,GAAI,IAC9BC,EAAQ1B,EAAW,EAFL,IAEqBsB,KAAI,SAAClB,GAAD,qBAAeA,MAE/CuB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBqB,EAApB,KAEMC,GAAkBtB,EAAc,GAAKD,EACrCwB,EAAgBpB,KAAKqB,IAAIF,EAAiBvB,EAT9B,IAUZ0B,EAAeC,mBAAQ,WAC3B,OAAOT,EAAMU,MAAML,EAAgBC,KAClC,CAACvB,EAAaD,IAOjB,OACE,sBAAKS,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EAAiB,EADlD,cACyDC,EADzD,eAvBc,GAuBd,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO9B,EACP+B,SApBV,SAAoCC,GAClCX,GAAYW,EAAEC,OAAOH,OACrBR,EAAe,IAaT,SAOGL,EAAiBH,KAAI,SAACoB,GAAD,OACpB,wBAAQJ,MAAOI,EAAf,SACGA,GADyBA,UAOlC,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEV,MAjDY,GAkDZC,QAASA,EACTC,YAAaA,EACbC,aAAcoB,IAGfI,EAAaZ,KAAI,SAACsB,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,UC1DhCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9d831525.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const paginationRange = Math.ceil(total / perPage);\n  const pages = getNumbers(1, paginationRange);\n\n  const prevDisabled = currentPage === 1;\n  const nextDisabled = currentPage === paginationRange;\n\n  const onNext = () => {\n    if (currentPage < paginationRange) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const onPrevious = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: prevDisabled })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={prevDisabled}\n            onClick={onPrevious}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map((page) => (\n          <li\n            className={cn('page-item', { active: page === currentPage })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                if (page !== currentPage) {\n                  onPageChange(page);\n                }\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={cn('page-item', {\n            disabled: nextDisabled,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={nextDisabled}\n            onClick={onNext}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst TOTAL_ITEMS = 42;\nconst PER_PAGE_OPTIONS = [3, 5, 10, 20];\nconst items = getNumbers(1, TOTAL_ITEMS).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstPageIndex = (currentPage - 1) * perPage;\n  const lastPageIndex = Math.min(firstPageIndex + perPage, TOTAL_ITEMS);\n  const currentItems = useMemo(() => {\n    return items.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, perPage]);\n\n  function handlePerPageSelecorChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    setPerPage(+e.target.value);\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstPageIndex + 1} - ${lastPageIndex} of ${TOTAL_ITEMS})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageSelecorChange}\n          >\n            {PER_PAGE_OPTIONS.map((option) => (\n              <option value={option} key={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={TOTAL_ITEMS}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      {currentItems.map((item) => (\n        <li data-cy=\"item\" key={item}>\n          {item}\n        </li>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}